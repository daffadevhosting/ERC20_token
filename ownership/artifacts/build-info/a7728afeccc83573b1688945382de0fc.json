{
	"id": "a7728afeccc83573b1688945382de0fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"ownership/Ownable.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\n\ncontract Ownable {\n\n  address private owner;\n\n  event NewOwner(address oldOwner, address newOwner);\n\n  constructor() {\n    owner = msg.sender;\n  }\n\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  function contractOwner() external view returns (address) {\n    return owner;\n  }\n\n  function isOwner() public view returns (bool) {\n    return msg.sender == owner;\n  }\n\n  function transferOwnership(address _newOwner) external onlyOwner {\n    require(_newOwner != address(0), 'Ownable: address is not valid');\n    owner = _newOwner;\n    emit NewOwner(msg.sender, _newOwner);\n  } \n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "NewOwner",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "contractOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ownership/Ownable.sol\":56:683  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ownership/Ownable.sol\":159:202  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ownership/Ownable.sol\":187:197  msg.sender */\n  caller\n    /* \"ownership/Ownable.sol\":179:184  owner */\n  0x00\n  dup1\n    /* \"ownership/Ownable.sol\":179:197  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ownership/Ownable.sol\":56:683  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ownership/Ownable.sol\":56:683  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8f32d59b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xce606ee0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ownership/Ownable.sol\":387:470  function isOwner() public view returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownership/Ownable.sol\":303:383  function contractOwner() external view returns (address) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ownership/Ownable.sol\":474:680  function transferOwnership(address _newOwner) external onlyOwner {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"ownership/Ownable.sol\":387:470  function isOwner() public view returns (bool) {... */\n    tag_7:\n        /* \"ownership/Ownable.sol\":427:431  bool */\n      0x00\n        /* \"ownership/Ownable.sol\":460:465  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownership/Ownable.sol\":446:465  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownership/Ownable.sol\":446:456  msg.sender */\n      caller\n        /* \"ownership/Ownable.sol\":446:465  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ownership/Ownable.sol\":439:465  return msg.sender == owner */\n      swap1\n      pop\n        /* \"ownership/Ownable.sol\":387:470  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"ownership/Ownable.sol\":303:383  function contractOwner() external view returns (address) {... */\n    tag_11:\n        /* \"ownership/Ownable.sol\":351:358  address */\n      0x00\n        /* \"ownership/Ownable.sol\":373:378  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownership/Ownable.sol\":366:378  return owner */\n      swap1\n      pop\n        /* \"ownership/Ownable.sol\":303:383  function contractOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ownership/Ownable.sol\":474:680  function transferOwnership(address _newOwner) external onlyOwner {... */\n    tag_17:\n        /* \"ownership/Ownable.sol\":241:250  isOwner() */\n      tag_21\n        /* \"ownership/Ownable.sol\":241:248  isOwner */\n      tag_7\n        /* \"ownership/Ownable.sol\":241:250  isOwner() */\n      jump\t// in\n    tag_21:\n        /* \"ownership/Ownable.sol\":233:287  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"ownership/Ownable.sol\":574:575  0 */\n      0x00\n        /* \"ownership/Ownable.sol\":553:576  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ownership/Ownable.sol\":553:562  _newOwner */\n      dup2\n        /* \"ownership/Ownable.sol\":553:576  _newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ownership/Ownable.sol\":545:610  require(_newOwner != address(0), 'Ownable: address is not valid') */\n      tag_26\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"ownership/Ownable.sol\":624:633  _newOwner */\n      dup1\n        /* \"ownership/Ownable.sol\":616:621  owner */\n      0x00\n      dup1\n        /* \"ownership/Ownable.sol\":616:633  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ownership/Ownable.sol\":644:675  NewOwner(msg.sender, _newOwner) */\n      0x70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b2364\n        /* \"ownership/Ownable.sol\":653:663  msg.sender */\n      caller\n        /* \"ownership/Ownable.sol\":665:674  _newOwner */\n      dup3\n        /* \"ownership/Ownable.sol\":644:675  NewOwner(msg.sender, _newOwner) */\n      mload(0x40)\n      tag_29\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ownership/Ownable.sol\":474:680  function transferOwnership(address _newOwner) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_34\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:414   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:230   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":276:277   */\n      0x00\n        /* \"#utility.yul\":273:274   */\n      dup1\n        /* \"#utility.yul\":266:278   */\n      revert\n        /* \"#utility.yul\":228:230   */\n    tag_37:\n        /* \"#utility.yul\":319:320   */\n      0x00\n        /* \"#utility.yul\":344:397   */\n      tag_38\n        /* \"#utility.yul\":389:396   */\n      dup5\n        /* \"#utility.yul\":380:386   */\n      dup3\n        /* \"#utility.yul\":369:378   */\n      dup6\n        /* \"#utility.yul\":365:387   */\n      add\n        /* \"#utility.yul\":344:397   */\n      tag_32\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":334:397   */\n      swap2\n      pop\n        /* \"#utility.yul\":290:407   */\n      pop\n        /* \"#utility.yul\":218:414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":420:538   */\n    tag_39:\n        /* \"#utility.yul\":507:531   */\n      tag_41\n        /* \"#utility.yul\":525:530   */\n      dup2\n        /* \"#utility.yul\":507:531   */\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":502:505   */\n      dup3\n        /* \"#utility.yul\":495:532   */\n      mstore\n        /* \"#utility.yul\":485:538   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":544:653   */\n    tag_43:\n        /* \"#utility.yul\":625:646   */\n      tag_45\n        /* \"#utility.yul\":640:645   */\n      dup2\n        /* \"#utility.yul\":625:646   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":620:623   */\n      dup3\n        /* \"#utility.yul\":613:647   */\n      mstore\n        /* \"#utility.yul\":603:653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:986   */\n    tag_47:\n      0x00\n        /* \"#utility.yul\":822:889   */\n      tag_49\n        /* \"#utility.yul\":886:888   */\n      0x1d\n        /* \"#utility.yul\":881:884   */\n      dup4\n        /* \"#utility.yul\":822:889   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":815:889   */\n      swap2\n      pop\n        /* \"#utility.yul\":919:950   */\n      0x4f776e61626c653a2061646472657373206973206e6f742076616c6964000000\n        /* \"#utility.yul\":915:916   */\n      0x00\n        /* \"#utility.yul\":910:913   */\n      dup4\n        /* \"#utility.yul\":906:917   */\n      add\n        /* \"#utility.yul\":899:951   */\n      mstore\n        /* \"#utility.yul\":977:979   */\n      0x20\n        /* \"#utility.yul\":972:975   */\n      dup3\n        /* \"#utility.yul\":968:980   */\n      add\n        /* \"#utility.yul\":961:980   */\n      swap1\n      pop\n        /* \"#utility.yul\":805:986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1322   */\n    tag_51:\n      0x00\n        /* \"#utility.yul\":1155:1222   */\n      tag_53\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1214:1217   */\n      dup4\n        /* \"#utility.yul\":1155:1222   */\n      tag_50\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1148:1222   */\n      swap2\n      pop\n        /* \"#utility.yul\":1252:1286   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1243:1246   */\n      dup4\n        /* \"#utility.yul\":1239:1250   */\n      add\n        /* \"#utility.yul\":1232:1287   */\n      mstore\n        /* \"#utility.yul\":1313:1315   */\n      0x20\n        /* \"#utility.yul\":1308:1311   */\n      dup3\n        /* \"#utility.yul\":1304:1316   */\n      add\n        /* \"#utility.yul\":1297:1316   */\n      swap1\n      pop\n        /* \"#utility.yul\":1138:1322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1328:1550   */\n    tag_13:\n      0x00\n        /* \"#utility.yul\":1459:1461   */\n      0x20\n        /* \"#utility.yul\":1448:1457   */\n      dup3\n        /* \"#utility.yul\":1444:1462   */\n      add\n        /* \"#utility.yul\":1436:1462   */\n      swap1\n      pop\n        /* \"#utility.yul\":1472:1543   */\n      tag_55\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1529:1538   */\n      dup4\n        /* \"#utility.yul\":1525:1542   */\n      add\n        /* \"#utility.yul\":1516:1522   */\n      dup5\n        /* \"#utility.yul\":1472:1543   */\n      tag_39\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1426:1550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1888   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":1715:1717   */\n      0x40\n        /* \"#utility.yul\":1704:1713   */\n      dup3\n        /* \"#utility.yul\":1700:1718   */\n      add\n        /* \"#utility.yul\":1692:1718   */\n      swap1\n      pop\n        /* \"#utility.yul\":1728:1799   */\n      tag_57\n        /* \"#utility.yul\":1796:1797   */\n      0x00\n        /* \"#utility.yul\":1785:1794   */\n      dup4\n        /* \"#utility.yul\":1781:1798   */\n      add\n        /* \"#utility.yul\":1772:1778   */\n      dup6\n        /* \"#utility.yul\":1728:1799   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1809:1881   */\n      tag_58\n        /* \"#utility.yul\":1877:1879   */\n      0x20\n        /* \"#utility.yul\":1866:1875   */\n      dup4\n        /* \"#utility.yul\":1862:1880   */\n      add\n        /* \"#utility.yul\":1853:1859   */\n      dup5\n        /* \"#utility.yul\":1809:1881   */\n      tag_39\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1682:1888   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1894:2104   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":2019:2021   */\n      0x20\n        /* \"#utility.yul\":2008:2017   */\n      dup3\n        /* \"#utility.yul\":2004:2022   */\n      add\n        /* \"#utility.yul\":1996:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2032:2097   */\n      tag_60\n        /* \"#utility.yul\":2094:2095   */\n      0x00\n        /* \"#utility.yul\":2083:2092   */\n      dup4\n        /* \"#utility.yul\":2079:2096   */\n      add\n        /* \"#utility.yul\":2070:2076   */\n      dup5\n        /* \"#utility.yul\":2032:2097   */\n      tag_43\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1986:2104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2110:2529   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2303:2312   */\n      dup3\n        /* \"#utility.yul\":2299:2317   */\n      add\n        /* \"#utility.yul\":2291:2317   */\n      swap1\n      pop\n        /* \"#utility.yul\":2363:2372   */\n      dup2\n        /* \"#utility.yul\":2357:2361   */\n      dup2\n        /* \"#utility.yul\":2353:2373   */\n      sub\n        /* \"#utility.yul\":2349:2350   */\n      0x00\n        /* \"#utility.yul\":2338:2347   */\n      dup4\n        /* \"#utility.yul\":2334:2351   */\n      add\n        /* \"#utility.yul\":2327:2374   */\n      mstore\n        /* \"#utility.yul\":2391:2522   */\n      tag_62\n        /* \"#utility.yul\":2517:2521   */\n      dup2\n        /* \"#utility.yul\":2391:2522   */\n      tag_47\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2383:2522   */\n      swap1\n      pop\n        /* \"#utility.yul\":2281:2529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2535:2954   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":2739:2741   */\n      0x20\n        /* \"#utility.yul\":2728:2737   */\n      dup3\n        /* \"#utility.yul\":2724:2742   */\n      add\n        /* \"#utility.yul\":2716:2742   */\n      swap1\n      pop\n        /* \"#utility.yul\":2788:2797   */\n      dup2\n        /* \"#utility.yul\":2782:2786   */\n      dup2\n        /* \"#utility.yul\":2778:2798   */\n      sub\n        /* \"#utility.yul\":2774:2775   */\n      0x00\n        /* \"#utility.yul\":2763:2772   */\n      dup4\n        /* \"#utility.yul\":2759:2776   */\n      add\n        /* \"#utility.yul\":2752:2799   */\n      mstore\n        /* \"#utility.yul\":2816:2947   */\n      tag_64\n        /* \"#utility.yul\":2942:2946   */\n      dup2\n        /* \"#utility.yul\":2816:2947   */\n      tag_51\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2808:2947   */\n      swap1\n      pop\n        /* \"#utility.yul\":2706:2954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2960:3129   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":3078:3084   */\n      dup3\n        /* \"#utility.yul\":3073:3076   */\n      dup3\n        /* \"#utility.yul\":3066:3085   */\n      mstore\n        /* \"#utility.yul\":3118:3122   */\n      0x20\n        /* \"#utility.yul\":3113:3116   */\n      dup3\n        /* \"#utility.yul\":3109:3123   */\n      add\n        /* \"#utility.yul\":3094:3123   */\n      swap1\n      pop\n        /* \"#utility.yul\":3056:3129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3231   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":3201:3225   */\n      tag_67\n        /* \"#utility.yul\":3219:3224   */\n      dup3\n        /* \"#utility.yul\":3201:3225   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3190:3225   */\n      swap1\n      pop\n        /* \"#utility.yul\":3180:3231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3237:3327   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":3314:3319   */\n      dup2\n        /* \"#utility.yul\":3307:3320   */\n      iszero\n        /* \"#utility.yul\":3300:3321   */\n      iszero\n        /* \"#utility.yul\":3289:3321   */\n      swap1\n      pop\n        /* \"#utility.yul\":3279:3327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3333:3459   */\n    tag_68:\n      0x00\n        /* \"#utility.yul\":3410:3452   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3403:3408   */\n      dup3\n        /* \"#utility.yul\":3399:3453   */\n      and\n        /* \"#utility.yul\":3388:3453   */\n      swap1\n      pop\n        /* \"#utility.yul\":3378:3459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3465:3587   */\n    tag_35:\n        /* \"#utility.yul\":3538:3562   */\n      tag_72\n        /* \"#utility.yul\":3556:3561   */\n      dup2\n        /* \"#utility.yul\":3538:3562   */\n      tag_42\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3531:3536   */\n      dup2\n        /* \"#utility.yul\":3528:3563   */\n      eq\n        /* \"#utility.yul\":3518:3520   */\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3577:3578   */\n      0x00\n        /* \"#utility.yul\":3574:3575   */\n      dup1\n        /* \"#utility.yul\":3567:3579   */\n      revert\n        /* \"#utility.yul\":3518:3520   */\n    tag_73:\n        /* \"#utility.yul\":3508:3587   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220192c8acee926262681bc75e71167cbd64b015eea67e803824a7315d1769781e664736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610468806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638f32d59b14610046578063ce606ee014610064578063f2fde38b14610082575b600080fd5b61004e61009e565b60405161005b9190610371565b60405180910390f35b61006c6100f5565b604051610079919061032d565b60405180910390f35b61009c60048036038101906100979190610266565b61011e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61012661009e565b610165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015c906103ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc9061038c565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b23643382604051610246929190610348565b60405180910390a150565b6000813590506102608161041b565b92915050565b60006020828403121561027857600080fd5b600061028684828501610251565b91505092915050565b610298816103dd565b82525050565b6102a7816103ef565b82525050565b60006102ba601d836103cc565b91507f4f776e61626c653a2061646472657373206973206e6f742076616c69640000006000830152602082019050919050565b60006102fa6020836103cc565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000602082019050610342600083018461028f565b92915050565b600060408201905061035d600083018561028f565b61036a602083018461028f565b9392505050565b6000602082019050610386600083018461029e565b92915050565b600060208201905081810360008301526103a5816102ad565b9050919050565b600060208201905081810360008301526103c5816102ed565b9050919050565b600082825260208201905092915050565b60006103e8826103fb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610424816103dd565b811461042f57600080fd5b5056fea2646970667358221220192c8acee926262681bc75e71167cbd64b015eea67e803824a7315d1769781e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x468 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x9E JUMP JUMPDEST PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x70AEA8D848E8A90FB7661B227DC522EB6395C3DAC71B63CB59EDD5C9899B2364 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x246 SWAP3 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x260 DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA PUSH1 0x1D DUP4 PUSH2 0x3CC JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2061646472657373206973206E6F742076616C6964000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA PUSH1 0x20 DUP4 PUSH2 0x3CC JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x36A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C5 DUP2 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP2 EQ PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x2C DUP11 0xCE 0xE9 0x26 0x26 0x26 DUP2 0xBC PUSH22 0xE71167CBD64B015EEA67E803824A7315D1769781E664 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "56:627:0:-:0;;;159:43;;;;;;;;;;187:10;179:5;;:18;;;;;;;;;;;;;;;;;;56:627;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3590:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "290:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "305:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "334:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "369:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "380:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "389:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "344:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "344:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "334:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "502:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "525:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "507:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "495:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "473:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "480:3:1",
														"type": ""
													}
												],
												"src": "420:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "603:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "620:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "640:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "625:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "625:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "613:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "613:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "598:3:1",
														"type": ""
													}
												],
												"src": "544:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "805:181:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "815:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "881:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "886:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "822:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "815:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "910:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "906:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "919:31:1",
																		"type": "",
																		"value": "Ownable: address is not valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "899:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "899:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "899:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "961:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "972:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "977:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "961:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "793:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "801:3:1",
														"type": ""
													}
												],
												"src": "659:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1138:184:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1148:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1214:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1155:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1155:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1148:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1243:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1252:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1232:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1297:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1308:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1297:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1126:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1134:3:1",
														"type": ""
													}
												],
												"src": "992:330:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1426:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1436:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1529:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1540:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1472:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1398:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1410:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1421:4:1",
														"type": ""
													}
												],
												"src": "1328:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1682:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1692:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1715:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1700:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1692:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1772:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1796:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1781:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1728:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1728:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1728:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1853:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1877:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1862:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1809:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1809:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1646:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1658:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1677:4:1",
														"type": ""
													}
												],
												"src": "1556:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1986:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1996:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2008:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2004:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1996:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2094:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2079:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2032:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2032:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1958:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1970:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1981:4:1",
														"type": ""
													}
												],
												"src": "1894:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2281:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2291:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2299:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2291:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2349:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2357:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2327:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2517:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2391:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2383:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2261:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2276:4:1",
														"type": ""
													}
												],
												"src": "2110:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2706:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2716:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2728:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2716:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2763:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2774:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2759:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2782:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2788:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2778:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2752:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2752:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2808:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2942:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2816:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2686:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2701:4:1",
														"type": ""
													}
												],
												"src": "2535:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3056:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3073:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3066:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3066:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3066:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3094:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3113:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3118:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3109:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3094:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3028:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3033:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3044:11:1",
														"type": ""
													}
												],
												"src": "2960:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3180:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3190:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3219:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3201:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3190:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3172:7:1",
														"type": ""
													}
												],
												"src": "3135:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3289:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3314:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3307:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3289:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3271:7:1",
														"type": ""
													}
												],
												"src": "3237:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3378:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3388:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3410:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3399:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3370:7:1",
														"type": ""
													}
												],
												"src": "3333:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3508:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3565:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3574:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3567:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3567:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3567:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3531:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3556:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3538:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3538:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3528:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:43:1"
															},
															"nodeType": "YulIf",
															"src": "3518:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3501:5:1",
														"type": ""
													}
												],
												"src": "3465:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n\n        mstore(add(pos, 0), \"Ownable: address is not valid\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n\n        mstore(add(pos, 0), \"Ownable: caller is not the owner\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80638f32d59b14610046578063ce606ee014610064578063f2fde38b14610082575b600080fd5b61004e61009e565b60405161005b9190610371565b60405180910390f35b61006c6100f5565b604051610079919061032d565b60405180910390f35b61009c60048036038101906100979190610266565b61011e565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61012661009e565b610165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015c906103ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cc9061038c565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b23643382604051610246929190610348565b60405180910390a150565b6000813590506102608161041b565b92915050565b60006020828403121561027857600080fd5b600061028684828501610251565b91505092915050565b610298816103dd565b82525050565b6102a7816103ef565b82525050565b60006102ba601d836103cc565b91507f4f776e61626c653a2061646472657373206973206e6f742076616c69640000006000830152602082019050919050565b60006102fa6020836103cc565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000602082019050610342600083018461028f565b92915050565b600060408201905061035d600083018561028f565b61036a602083018461028f565b9392505050565b6000602082019050610386600083018461029e565b92915050565b600060208201905081810360008301526103a5816102ad565b9050919050565b600060208201905081810360008301526103c5816102ed565b9050919050565b600082825260208201905092915050565b60006103e8826103fb565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610424816103dd565b811461042f57600080fd5b5056fea2646970667358221220192c8acee926262681bc75e71167cbd64b015eea67e803824a7315d1769781e664736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xCE606EE0 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x266 JUMP JUMPDEST PUSH2 0x11E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x126 PUSH2 0x9E JUMP JUMPDEST PUSH2 0x165 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15C SWAP1 PUSH2 0x3AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC SWAP1 PUSH2 0x38C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x70AEA8D848E8A90FB7661B227DC522EB6395C3DAC71B63CB59EDD5C9899B2364 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x246 SWAP3 SWAP2 SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x260 DUP2 PUSH2 0x41B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286 DUP5 DUP3 DUP6 ADD PUSH2 0x251 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A7 DUP2 PUSH2 0x3EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BA PUSH1 0x1D DUP4 PUSH2 0x3CC JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2061646472657373206973206E6F742076616C6964000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA PUSH1 0x20 DUP4 PUSH2 0x3CC JUMP JUMPDEST SWAP2 POP PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x342 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x35D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x28F JUMP JUMPDEST PUSH2 0x36A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x386 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A5 DUP2 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C5 DUP2 PUSH2 0x2ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E8 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424 DUP2 PUSH2 0x3DD JUMP JUMPDEST DUP2 EQ PUSH2 0x42F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0x2C DUP11 0xCE 0xE9 0x26 0x26 0x26 DUP2 0xBC PUSH22 0xE71167CBD64B015EEA67E803824A7315D1769781E664 PUSH20 0x6F6C634300080000330000000000000000000000 ",
							"sourceMap": "56:627:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:83;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;303:80;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:206;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;387:83;427:4;460:5;;;;;;;;;;;446:19;;:10;:19;;;439:26;;387:83;:::o;303:80::-;351:7;373:5;;;;;;;;;;;366:12;;303:80;:::o;474:206::-;241:9;:7;:9::i;:::-;233:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;574:1:::1;553:23;;:9;:23;;;;545:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;624:9;616:5;::::0;:17:::1;;;;;;;;;;;;;;;;;;644:31;653:10;665:9;644:31;;;;;;;:::i;:::-;;;;;;;;474:206:::0;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:109::-;625:21;640:5;625:21;:::i;:::-;620:3;613:34;603:50;;:::o;659:327::-;;822:67;886:2;881:3;822:67;:::i;:::-;815:74;;919:31;915:1;910:3;906:11;899:52;977:2;972:3;968:12;961:19;;805:181;;;:::o;992:330::-;;1155:67;1219:2;1214:3;1155:67;:::i;:::-;1148:74;;1252:34;1248:1;1243:3;1239:11;1232:55;1313:2;1308:3;1304:12;1297:19;;1138:184;;;:::o;1328:222::-;;1459:2;1448:9;1444:18;1436:26;;1472:71;1540:1;1529:9;1525:17;1516:6;1472:71;:::i;:::-;1426:124;;;;:::o;1556:332::-;;1715:2;1704:9;1700:18;1692:26;;1728:71;1796:1;1785:9;1781:17;1772:6;1728:71;:::i;:::-;1809:72;1877:2;1866:9;1862:18;1853:6;1809:72;:::i;:::-;1682:206;;;;;:::o;1894:210::-;;2019:2;2008:9;2004:18;1996:26;;2032:65;2094:1;2083:9;2079:17;2070:6;2032:65;:::i;:::-;1986:118;;;;:::o;2110:419::-;;2314:2;2303:9;2299:18;2291:26;;2363:9;2357:4;2353:20;2349:1;2338:9;2334:17;2327:47;2391:131;2517:4;2391:131;:::i;:::-;2383:139;;2281:248;;;:::o;2535:419::-;;2739:2;2728:9;2724:18;2716:26;;2788:9;2782:4;2778:20;2774:1;2763:9;2759:17;2752:47;2816:131;2942:4;2816:131;:::i;:::-;2808:139;;2706:248;;;:::o;2960:169::-;;3078:6;3073:3;3066:19;3118:4;3113:3;3109:14;3094:29;;3056:73;;;;:::o;3135:96::-;;3201:24;3219:5;3201:24;:::i;:::-;3190:35;;3180:51;;;:::o;3237:90::-;;3314:5;3307:13;3300:21;3289:32;;3279:48;;;:::o;3333:126::-;;3410:42;3403:5;3399:54;3388:65;;3378:81;;;:::o;3465:122::-;3538:24;3556:5;3538:24;:::i;:::-;3531:5;3528:35;3518:2;;3577:1;3574;3567:12;3518:2;3508:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "225600",
								"executionCost": "21135",
								"totalCost": "246735"
							},
							"external": {
								"contractOwner()": "1222",
								"isOwner()": "1174",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 202,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 159,
									"end": 202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 159,
									"end": 202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 197,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 179,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 184,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 179,
									"end": 197,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 179,
									"end": 197,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 179,
									"end": 197,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 197,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 683,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220192c8acee926262681bc75e71167cbd64b015eea67e803824a7315d1769781e664736f6c63430008000033",
									".code": [
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "CE606EE0"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 427,
											"end": 431,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 460,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 460,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 456,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 446,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 446,
											"end": 465,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 446,
											"end": 465,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 439,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 387,
											"end": 470,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 351,
											"end": 358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 373,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 373,
											"end": 378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 366,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 303,
											"end": 383,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 241,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 233,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 233,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 574,
											"end": 575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 553,
											"end": 576,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 553,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 624,
											"end": 633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 616,
											"end": 633,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 616,
											"end": 633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 616,
											"end": 633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "70AEA8D848E8A90FB7661B227DC522EB6395C3DAC71B63CB59EDD5C9899B2364"
										},
										{
											"begin": 653,
											"end": 663,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 665,
											"end": 674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 644,
											"end": 675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 675,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 680,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 152,
											"end": 414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 276,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 266,
											"end": 278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 230,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 228,
											"end": 230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 319,
											"end": 320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 378,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 365,
											"end": 387,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 344,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 344,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 407,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 218,
											"end": 414,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 420,
											"end": 538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 507,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 507,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 495,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 538,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 544,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 625,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 625,
											"end": 646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 620,
											"end": 623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 613,
											"end": 647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 603,
											"end": 653,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 986,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 659,
											"end": 986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 659,
											"end": 986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 888,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 881,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 822,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 822,
											"end": 889,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 822,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 822,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 815,
											"end": 889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 815,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 950,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2061646472657373206973206E6F742076616C6964000000"
										},
										{
											"begin": 915,
											"end": 916,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 906,
											"end": 917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 899,
											"end": 951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 972,
											"end": 975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 968,
											"end": 980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 805,
											"end": 986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 805,
											"end": 986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 805,
											"end": 986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 805,
											"end": 986,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1322,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 992,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 992,
											"end": 1322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1155,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1155,
											"end": 1222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1155,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1286,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1308,
											"end": 1311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1322,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1328,
											"end": 1550,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1328,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1472,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1550,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1426,
											"end": 1550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1556,
											"end": 1888,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1556,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1728,
											"end": 1799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1728,
											"end": 1799,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1728,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1877,
											"end": 1879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1866,
											"end": 1875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 1880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1809,
											"end": 1881,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1809,
											"end": 1881,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1809,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1888,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1894,
											"end": 2104,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1894,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2022,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2094,
											"end": 2095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2092,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2079,
											"end": 2096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2032,
											"end": 2097,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2097,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2032,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2529,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2110,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2373,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2374,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2391,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2529,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2535,
											"end": 2954,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2535,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2716,
											"end": 2742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2797,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2816,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2816,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2816,
											"end": 2947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2947,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2816,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2954,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2960,
											"end": 3129,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2960,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2960,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3113,
											"end": 3116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3056,
											"end": 3129,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3135,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3135,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3219,
											"end": 3224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3201,
											"end": 3225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3201,
											"end": 3225,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3201,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3231,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3237,
											"end": 3327,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3237,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3320,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3321,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3327,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3333,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3333,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3333,
											"end": 3459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3403,
											"end": 3408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3556,
											"end": 3561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3538,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3563,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3579,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3518,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3587,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"contractOwner()": "ce606ee0",
							"isOwner()": "8f32d59b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ownership/Ownable.sol\":{\"keccak256\":\"0x6889794c433c09d21f380c720252f0a01b5d0aba6f69b7e45f7a53dd91cbe391\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0bec7cad94da0b7cc5f3b37f660b26c81e473772cf5f3a0d2a720d6b21b5ece\",\"dweb:/ipfs/Qmd6mbfuQgMsZHQuqsTrC4r7UgrgSSofoqHCorEk69b3x7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ownership/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 76,
									"src": "78:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 9,
									"name": "NewOwner",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "119:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "137:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "118:36:0"
									},
									"src": "104:51:0"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "173:29:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 12,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "179:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "187:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "187:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "179:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "179:18:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "173:0:0"
									},
									"scope": 76,
									"src": "159:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "227:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 21,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "241:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "241:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "252:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 20,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "233:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "233:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "233:54:0"
											},
											{
												"id": 26,
												"nodeType": "PlaceholderStatement",
												"src": "293:1:0"
											}
										]
									},
									"id": 28,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:0"
									},
									"src": "206:93:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "360:23:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "373:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 32,
												"id": 34,
												"nodeType": "Return",
												"src": "366:12:0"
											}
										]
									},
									"functionSelector": "ce606ee0",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "351:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:9:0"
									},
									"scope": 76,
									"src": "303:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "433:37:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 41,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "446:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "446:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 43,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "460:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "446:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 40,
												"id": 45,
												"nodeType": "Return",
												"src": "439:26:0"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "427:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 38,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "427:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "426:6:0"
									},
									"scope": 76,
									"src": "387:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "539:141:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 55,
																"name": "_newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 49,
																"src": "553:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "574:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "566:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 56,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "566:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "566:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "553:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2061646472657373206973206e6f742076616c6964",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f",
																"typeString": "literal_string \"Ownable: address is not valid\""
															},
															"value": "Ownable: address is not valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_921345a1beb9ab81e220dfbdd28ca09236fbe45ba7c551fe8dc3bc6c2d99f38f",
																"typeString": "literal_string \"Ownable: address is not valid\""
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "545:65:0"
											},
											{
												"expression": {
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 64,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "616:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 65,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 49,
														"src": "624:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "616:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "616:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "653:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "653:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 71,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "665:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "NewOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "644:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "644:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "EmitStatement",
												"src": "639:36:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 52,
											"modifierName": {
												"id": 51,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 28,
												"src": "529:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "529:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "501:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:19:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "539:0:0"
									},
									"scope": 76,
									"src": "474:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 77,
							"src": "56:627:0"
						}
					],
					"src": "32:652:0"
				},
				"id": 0
			}
		}
	}
}